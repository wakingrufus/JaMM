name: Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  Create:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  Linux:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Get Version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: desktop:jpackage desktop:distZip -Pversion=${{ env.VERSION }}
      - name: Get Name of Deb
        run: |
            ARTIFACT_PATHNAME=$(ls ./desktop/build/jpackage/*.deb | head -n 1)
            echo "ARTIFACT_PATHNAME=$(ls ./desktop/build/jpackage/*.deb | head -n 1)" >> $GITHUB_ENV
            echo "ARTIFACT_NAME=$(basename $(ls ./desktop/build/jpackage/*.deb | head -n 1))" >> $GITHUB_ENV
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATHNAME }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/vnd.debian.binary-package
      - name: Get Name of zip
        run: |
          ZIP_PATHNAME=$(ls ./desktop/build/distributions/*.zip | head -n 1)
          echo "ZIP_PATHNAME=$(ls ./desktop/build/distributions/*.zip | head -n 1)" >> $GITHUB_ENV
          echo "ZIP_NAME=$(basename $(ls ./desktop/build/distributions/*.zip | head -n 1))" >> $GITHUB_ENV
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ env.ZIP_PATHNAME }}
          asset_name: ${{ env.ZIP_NAME }}
          asset_content_type: application/zip
      - name: Upload package to PackageCloud
        uses: danielmundi/upload-packagecloud@v1
        with:
          PACKAGE-NAME: ${{ env.ARTIFACT_PATHNAME }}
          PACKAGECLOUD-USERNAME: wakingrufus
          PACKAGECLOUD-REPO: public
          PACKAGECLOUD-DISTRIB: any/any
          PACKAGECLOUD-TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
  Mac:
    needs: create_release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Get Version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: desktop:jpackage desktop:distZip -Pversion=${{ env.VERSION }}
      - name: Get Name of pkg
        run: |
          ARTIFACT_PATHNAME=$(ls ./desktop/build/jpackage/*.pkg | head -n 1)
          echo "ARTIFACT_PATHNAME=$(ls ./desktop/build/jpackage/*.pkg | head -n 1)" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$(basename $(ls ./desktop/build/jpackage/*.pkg | head -n 1))" >> $GITHUB_ENV
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATHNAME }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/x-newton-compatible-pkg